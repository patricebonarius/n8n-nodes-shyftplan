import { INodeProperties } from 'n8n-workflow';
export const postApiV1ShiftplansAssignEmploymentsToOpenShiftsCreateFields: INodeProperties[] = [
	{
		displayName: 'Company ID',
		name: 'company_id',
		type: 'number',
		required: true,
		default: '',
		displayOptions: {
			show: {
				operation: ['postApiV1ShiftplansAssignEmploymentsToOpenShifts'],
				resource: ['shiftplans'],
			},
		},
		placeholder: '',
		description: 'Enter Company ID',
	},
	{
		displayName: 'Shiftplan ID',
		name: 'shiftplan_id',
		type: 'number',
		required: true,
		default: '',
		displayOptions: {
			show: {
				operation: ['postApiV1ShiftplansAssignEmploymentsToOpenShifts'],
				resource: ['shiftplans'],
			},
		},
		placeholder: '',
		description: 'ID of shiftplan that will be automatically filled',
	},
	{
		displayName: 'Additional Fields',
		name: 'additionalFields',
		type: 'collection',
		placeholder: 'Add Field',
		default: {},
		displayOptions: {
			show: {
				operation: ['postApiV1ShiftplansAssignEmploymentsToOpenShifts'],
				resource: ['shiftplans'],
			},
		},
		options: [
			{
				displayName: 'Copy Shiftplan',
				name: 'copy_shiftplan',
				type: 'boolean',
				default: false,
				placeholder: '',
				description:
					'WhetherCopy shiftplan and assign employments to open shifts in the copied shiftplan',
			},
			{
				displayName: 'Ignore Rotation_groups',
				name: 'ignore_rotation_groups',
				type: 'boolean',
				default: false,
				placeholder: '',
				description: 'WhetherIgnore rotation groups on automation',
			},
			{
				displayName: 'Ignore Conflicts[shifts_collision]',
				name: 'ignore_conflicts[shifts_collision]',
				type: 'boolean',
				default: false,
				placeholder: '',
				description: 'WhetherIgnore shifts collision on automation',
			},
			{
				displayName: 'Ignore Conflicts[absences_collision]',
				name: 'ignore_conflicts[absences_collision]',
				type: 'boolean',
				default: false,
				placeholder: '',
				description: 'WhetherIgnore absences on automation',
			},
			{
				displayName: 'Ignore Conflicts[maximum_working_hours]',
				name: 'ignore_conflicts[maximum_working_hours]',
				type: 'boolean',
				default: false,
				placeholder: '',
				description: 'WhetherIgnore maximum working hours limit on automation',
			},
			{
				displayName: 'Ignore Conflicts[only_native_assignments]',
				name: 'ignore_conflicts[only_native_assignments]',
				type: 'boolean',
				default: false,
				placeholder: '',
				description: 'WhetherOnly assign employees to their master locations',
			},
			{
				displayName: 'Scoring Rules[consistent_position]',
				name: 'scoring_rules[consistent_position]',
				type: 'string',
				default: '',
				placeholder: '',
				description: 'Select consistent position priority',
			},
			{
				displayName: 'Scoring Rules[consistent_time]',
				name: 'scoring_rules[consistent_time]',
				type: 'string',
				default: '',
				placeholder: '',
				description: 'Select time consistent priority',
			},
			{
				displayName: 'Scoring Rules[availabilities]',
				name: 'scoring_rules[availabilities]',
				type: 'string',
				default: '',
				placeholder: '',
				description: 'Select availabilities priority',
			},
			{
				displayName: 'Employment Tag_IDs[only_include][]',
				name: 'employment_tag_ids[only_include][]',
				type: 'string',
				default: '',
				placeholder: '',
				description: 'Filter in employees with these employee attributes on automation',
			},
			{
				displayName: 'Employment Tag_IDs[exclude][]',
				name: 'employment_tag_ids[exclude][]',
				type: 'string',
				default: '',
				placeholder: '',
				description: 'Filter out employees with these employee attributes on automation',
			},
		],
	},
];
